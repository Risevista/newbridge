---
import SectionTitle from './SectionTitle.astro';

// Values component data
const values = [
    {
      id: 'honest',
      label: 'Honest',
      title: '学びの姿勢',
      description: '昨日の自分を超え、常に成長する。私たちは成長できる「環境」にこだわり、学び続けます。仲間と高め合い、知識と経験を磨くことで、お客様に最高のパフォーマンスを提供します。',
      quote: '「昨日の自分を超える」'
    },
    {
      id: 'trust',
      label: 'Trust',
      title: '信頼できる人柄',
      description: '人としての誠実さが、信頼を築く。素直な姿勢と謙虚な心を忘れず、明るく前向きな行動で、笑顔と安心を届けます。信頼される人間力こそ、私たちの原動力です。',
      quote: '「素直に 謙虚に 前向きに」'
    },
    {
      id: 'speed',
      label: 'Speed',
      title: '迅速な対応力',
      description: 'スピードは、信頼の証。お客様の想いを汲み取り、即時に行動・改善する。迅速かつ的確な対応を徹底し、期待を超えるサービスを提供し続けます。',
      quote: '「すぐ動く すぐ応える すぐ改善する」'
    },
    {
      id: 'growth',
      label: 'Growth',
      title: '持続的な成長',
      description: '挑戦を止めず、変化を力に変える。新しいことに挑み、失敗を恐れず、そこから学ぶ。その積み重ねが、企業としての成長を支えます。持続的な成長を通じて、お客様と社会に価値を届け続けます。',
      quote: '「挑戦し続ける 成長し続ける」'
    }
  ];
  ---

  <section class="w-full flex flex-col items-center bg-primary-back text-primary py-16 md:py-24 px-4 md:px-0 relative" id="values">
    <div class="section-heading fade-in-text" style="--delay: .1s;">VALUES</div>
    <div class="w-full max-w-6xl flex flex-col">
      <SectionTitle title="VALUES" subtitle="４つの行動指針" />
      <h3 class="text-2xl md:text-4xl font-serif font-normal leading-tight mb-6 slide-in-left" style="--delay: 0.2s;">信頼でつながる未来を創る</h3>
      <div class="mt-3 text-base text-primary text-[14px] md:text-[16px]">
        私たちは、お客様一人ひとりの人生に寄り添い、安心と信頼を届ける“人生のパートナー”でありたいと願っています。変化の激しい時代の中で、常に学び、挑戦し続けることで、お客様にとって「この人に任せたい」と思っていただける存在を目指します。私たちが大切にしているのは、４つの姿勢。それが、私たちの信念であり、行動の原点です。
      </div>

      <!-- Content Section -->
      <div class="w-full md:w-2/3 ml-auto mt-4 md:mt-6">
        <div class="grid grid-rows-4 border-t border-primary border-b divide-y divide-primary" style="--last-i: 4;">
          {values.map((value) => (
            <div class="flex flex-col md:flex-row items-stretch gap-4 md:gap-6 px-0 pt-6 md:pt-8 pb-6 md:pb-8">
              <div class="w-full md:w-12 flex items-center justify-center">
                <p class="whitespace-nowrap font-tsukushi">
                  {value.label}
                </p>
              </div>
              <div class="flex-1 flex items-center justify-center">
                <h3 class="text-2xl md:text-4xl font-tsukushi text-secondary font-normal leading-tight text-center">
                  {value.title}
                </h3>
              </div>
              <div class="w-full md:w-1/2 flex flex-col justify-between md:pl-8">
                <p class="mb-4 md:mb-6 font-tsukushi">
                  {value.description}
                </p>
                <div class="w-full text-center text-secondary-screen font-tsukushi">
                  {value.quote}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <style>
  .black-bar {
    width: 5vw;
    min-width: 40px;
    height: 0.5px;
    background: #1d453c;
    display: block;
    border-radius: 1px;
    align-self: center;
  }

  /* Animated border and divide lines */
  .grid.border-t.border-primary.border-b.divide-y.divide-primary {
    position: relative;
    border-top: none;
    border-bottom: none;
    /* Grid-specific animation variables (isolate from generic --delay) */
    --line-base: 0s;           /* start time for top line */
    --line-step: .8s;          /* stagger between middle lines */
    --line-bottom-extra: .8s;  /* extra delay before bottom line */
  }

  .grid.border-t.border-primary.border-b.divide-y.divide-primary > div {
    border-top: none;
  }

  .grid.border-t.border-primary.border-b.divide-y.divide-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 0.5px;
    background: #1d453c;
    transition: width 1s ease-out;
    transition-delay: var(--line-base, 0s);
  }

  .grid.border-t.border-primary.border-b.divide-y.divide-primary.visible::before {
    width: 100%;
  }

  /* Animate divide-y lines */
  .grid.border-t.border-primary.border-b.divide-y.divide-primary > div {
    position: relative;
  }
  /* Assign sequence indices to rows */
  .grid.border-t.border-primary.border-b.divide-y.divide-primary > div:nth-child(1) { --i: 1; }
  .grid.border-t.border-primary.border-b.divide-y.divide-primary > div:nth-child(2) { --i: 2; }
  .grid.border-t.border-primary.border-b.divide-y.divide-primary > div:nth-child(3) { --i: 3; }
  .grid.border-t.border-primary.border-b.divide-y.divide-primary > div:nth-child(4) { --i: 4; }

  /* Middle divide lines (all except last row) */
  .grid.border-t.border-primary.border-b.divide-y.divide-primary > div:not(:last-child)::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 0.5px;
    background: #1d453c;
    transition: width 1s ease-out;
    transition-delay: calc(var(--line-base, 0s) + var(--i, 0) * var(--line-step, .3s));
  }
  .grid.border-t.border-primary.border-b.divide-y.divide-primary.visible > div:not(:last-child)::after {
    width: 100%;
  }

  /* Bottom border fires after the last middle line */
  .grid.border-t.border-primary.border-b.divide-y.divide-primary::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 0.5px;
    background: #1d453c;
    transition: width 1s ease-out;
    transition-delay: calc(var(--line-base, 0s) + ((var(--last-i, 4) - 1) * var(--line-step, .3s)) + var(--line-bottom-extra, .3s));
  }
  .grid.border-t.border-primary.border-b.divide-y.divide-primary.visible::after {
    width: 100%;
  }

  .section-heading { position: absolute; bottom: 2rem; right: 2rem; font-size: 8rem; font-weight: bold; color: #101ad0; opacity: 0; transition: opacity 0.8s ease-out; pointer-events: none; z-index: 1; letter-spacing: 0.2em; }
  .section-heading.visible { opacity: 0.1; }

  @media (max-width: 767px) {
    .section-heading {
      bottom: 2rem;
      right: 1rem;
      font-size: 2.25rem;
    }
    
    /* スマホでのスクロール時のオフセット調整 */
    #message, #consultants {
      scroll-margin-top: 80px;
    }
  }
  </style>

  <style>
  /* Ensure slide-in-left animation works within this component */
  .slide-in-left {
    left: -60px;
    opacity: 0;
    transform: skewX(-5deg);
    transition: opacity 1s ease-out, transform 1.5s, left 1.5s;
    transition-delay: var(--delay, 0s);
    position: relative;
  }
  .slide-in-left.visible {
    left: 0;
    opacity: 1;
    transform: skewX(0);
  }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
          } else {
            entry.target.classList.remove('visible');
          }
        });
      }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      });

      // Handle grid border and divide animations
      document.querySelectorAll('.grid.border-t.border-primary.border-b.divide-y.divide-primary').forEach((el) => {
        observer.observe(el);
      });

      // Apply slide-in-left visibility to headings within this component
      document.querySelectorAll('#values .slide-in-left').forEach((el) => {
        observer.observe(el);
      });
    });
  </script>