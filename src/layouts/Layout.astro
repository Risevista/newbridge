---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

import '../assets/styles/base.css';

interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="ja">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="圧倒的な安心をあなたに。保険代理店ならBridgeに。生命保険・損害保険、お客様のライフステージに合わせた最適な保険プランをご提案します。豊富な商品ラインナップと専門知識で、あなたの大切な家族と資産を守ります。" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="generator" content={Astro.generator} />
        <meta property="og:title" content="保険代理店ならBridgeに｜圧倒的な安心をあなたに" />
        <meta property="og:description" content="圧倒的な安心をあなたに。保険代理店ならBridgeに。生命保険・損害保険、お客様のライフステージに合わせた最適な保険プランをご提案します。豊富な商品ラインナップと専門知識で、あなたの大切な家族と資産を守ります。" />
        <meta property="og:type" content="website" />
        <meta property="og:site_name" content="株式会社Bridge" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content="保険代理店ならBridgeに｜圧倒的な安心をあなたに" />
        <meta name="twitter:description" content="圧倒的な安心をあなたに。保険代理店ならBridgeに。生命保険・損害保険、お客様のライフステージに合わせた最適な保険プランをご提案します。豊富な商品ラインナップと専門知識で、あなたの大切な家族と資産を守ります。" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
        />
        <!-- Smooth scroll is now handled by native browser APIs -->
        <link
            rel="apple-touch-icon"
            sizes="180x180"
            href="/apple-touch-icon.png"
        />
        <link
            rel="icon"
            type="image/png"
            sizes="32x32"
            href="/favicon-32x32.png"
        />
        <link
            rel="icon"
            type="image/png"
            sizes="16x16"
            href="/favicon-16x16.png"
        />
        <link rel="manifest" href="/site.webmanifest" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <!-- Adobe Fonts connections -->
        <link rel="preconnect" href="https://use.typekit.net" crossorigin>
        <link rel="preconnect" href="https://p.typekit.net" crossorigin>
        <link rel="dns-prefetch" href="https://use.typekit.net">
        <link rel="dns-prefetch" href="https://p.typekit.net">
        <!-- Session-based class control to avoid FOIT/FOUT -->
        <script>
          (function () {
            try {
              if (sessionStorage.getItem('adobe-fonts-loaded') === '1') {
                document.documentElement.classList.add('wf-active');
                document.documentElement.classList.remove('wf-loading','wf-inactive');
              } else {
                document.documentElement.classList.add('wf-loading');
              }
            } catch (_) {}
          })();
        </script>
        <!-- Single Adobe Fonts loader (no duplicates) -->
        <script
          is:inline
          defer
          src="https://use.typekit.net/zkl0ddn.js"
          onload="
            try{
              Typekit.load({
                async:true,
                active: function(){
                  try{ sessionStorage.setItem('adobe-fonts-loaded','1'); }catch(_){}
                  document.documentElement.classList.add('wf-active');
                  document.documentElement.classList.remove('wf-loading','wf-inactive');
                },
                inactive: function(){
                  document.documentElement.classList.remove('wf-loading');
                  document.documentElement.classList.add('wf-inactive');
                }
              });
            }catch(e){}
          "
        ></script>
        <slot name="head" />
        <title>{title}</title>
    </head>
    <body class="font-tsukushi m-0 p-0 text-[#0C223F] bg-primary-back">
        <Header />
        <main class="flex flex-col text-primary w-full">
            <slot />
            <div class="grow"></div>
            <Footer />
        </main>
        <slot name="foot" />
    </body>
</html>

<!-- Removed duplicate Typekit loader script; using single loader in <head> -->

<script>
  // Global observer to toggle .section-heading visibility across pages
  document.addEventListener('DOMContentLoaded', () => {
    const sectionHeadings = document.querySelectorAll('.section-heading');
    if (sectionHeadings.length === 0) return;
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
        } else {
          entry.target.classList.remove('visible');
        }
      });
    }, { threshold: 0.05, rootMargin: '0px 0px -20% 0px' });
    sectionHeadings.forEach((el) => observer.observe(el));
  });
</script>

<script>
  // TypeScript型定義を追加
  declare global {
    interface Window {
      Typekit: {
        load: (config: {
          kitId: string;
          scriptTimeout: number;
          async: boolean;
        }) => void;
      };
    }
  }

// スクロール挙動をリセット - シンプルな実装
document.addEventListener('DOMContentLoaded', () => {
  // 既存のLenisインスタンスをクリーンアップ（型安全に）
  if ((window as any).lenis) {
    (window as any).lenis.destroy();
    (window as any).lenis = null;
  }

  // スクロール時の処理（シンプル版）
  let scrollTimeout: ReturnType<typeof setTimeout>;
  const handleScroll = () => {
    clearTimeout(scrollTimeout);
    scrollTimeout = setTimeout(() => {
      const scrollTop = window.scrollY || 0;
      document.documentElement.style.setProperty('--scroll-y', `${scrollTop}px`);

      // 一度でもスクロールしたら visibility を visible に
      if (document.documentElement.style.getPropertyValue('--visibility-on-scroll') !== 'visible') {
        document.documentElement.style.setProperty('--visibility-on-scroll', 'visible');
      }
    }, 10);
  };

  // スクロールイベントリスナーを追加（重複を避けるため一度だけ）
  window.removeEventListener('scroll', handleScroll);
  window.addEventListener('scroll', handleScroll, { passive: true });

  // モバイルメニュー制御
  const mobileMenuButton = document.querySelector('.mobile-menu-button');
  const mobileMenu = document.querySelector('.mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
    mobileMenu?.classList.toggle('active');
  });

  const mobileMenuLinks = document.querySelectorAll('.mobile-menu a');
  mobileMenuLinks.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
      mobileMenu?.classList.remove('active');
    });
  });

  // アンカーリンクの処理（シンプル版）
  document.addEventListener('click', (event) => {
    const target = (event.target as Element).closest('a[href^="#"]');
    if (!target) return;

    const href = target.getAttribute('href');
    if (!href || href === '#') return;

    const targetElement = document.querySelector(href);
    if (!targetElement) return;

    event.preventDefault();

    // ヘッダーオフセットを取得
    const headerOffset = window.innerWidth <= 768 ? 72 : 96;
    const targetPosition = targetElement.getBoundingClientRect().top + window.scrollY - headerOffset;

    // スムーススクロール
    window.scrollTo({
      top: targetPosition,
      behavior: 'smooth'
    });
  });
});
</script>

<style>

.sticky-section {
  border: 2px solid red;
}
.image-wrapper {
  border: 2px solid blue;
}
.content-wrapper {
  border: 2px solid green;
}

/* ヘッダーのスタイル */
header {
  transition: background-color 0.3s ease;
}

/* モバイルメニューのアニメーション */
.mobile-menu {
  transition: all 0.3s ease-in-out;
}

.mobile-menu.active {
  display: block;
  animation: slideDown 0.3s ease-in-out;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* モバイル対応 */
@media (max-width: 768px) {
  body {
    width: 100vw;
    overflow-x: hidden;
  }

  main {
    width: 100vw;
    overflow-x: hidden;
  }
}
  z-index: 9999;
</style>